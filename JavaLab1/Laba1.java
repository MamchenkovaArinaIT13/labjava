import java.util.Random;
import java.util.Scanner;

public class Laba1 {
  private static Scanner scanner = new Scanner(System.in);

  public int menu() {
    while (true) {
      System.out.println(
          "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è!\n"
              + "1 - 2 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–µ—Ç–æ–¥–æ–≤'\n"
              + "2 - 4 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–µ—Ç–æ–¥–æ–≤'\n"
              + "3 - 6 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–µ—Ç–æ–¥–æ–≤'\n"
              + "4 - 8 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–µ—Ç–æ–¥–æ–≤'\n"
              + "5 - 10 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–µ—Ç–æ–¥–æ–≤'\n"
              + "6 - 2 –∑–∞–¥–∞—á–∞ –∏–∑ '—É—Å–ª–æ–≤–∏–π'\n"
              + "7 - 4 –∑–∞–¥–∞—á–∞ –∏–∑ '—É—Å–ª–æ–≤–∏–π'\n"
              + "8 - 6 –∑–∞–¥–∞—á–∞ –∏–∑ '—É—Å–ª–æ–≤–∏–π'\n"
              + "9 - 8 –∑–∞–¥–∞—á–∞ –∏–∑ '—É—Å–ª–æ–≤–∏–π'\n"
              + "10 - 10 –∑–∞–¥–∞—á–∞ –∏–∑ '—É—Å–ª–æ–≤–∏–π'\n"
              + "11 - 2 –∑–∞–¥–∞—á–∞ –∏–∑ '—Ü–∏–∫–ª–æ–≤'\n"
              + "12 - 4 –∑–∞–¥–∞—á–∞ –∏–∑ '—Ü–∏–∫–ª–æ–≤'\n"
              + "13 - 6 –∑–∞–¥–∞—á–∞ –∏–∑ '—Ü–∏–∫–ª–æ–≤'\n"
              + "14 - 8 –∑–∞–¥–∞—á–∞ –∏–∑ '—Ü–∏–∫–ª–æ–≤'\n"
              + "15 - 10 –∑–∞–¥–∞—á–∞ –∏–∑ '—Ü–∏–∫–ª–æ–≤'\n"
              + "16 - 2 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'\n"
              + "17 - 4 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'\n"
              + "18 - 6 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'\n"
              + "19 - 8 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'\n"
              + "20 - 10 –∑–∞–¥–∞—á–∞ –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'\n");

      int choice = -1;
      System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è: ");
      if (scanner.hasNextInt()) {
        choice = scanner.nextInt();
        switch (choice) {
          case 1:
            System.out.println("–ó–∞–¥–∞—á–∞ 2 –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ç–æ–¥–æ–≤");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
                    + "—Å–ª–æ–∂–µ–Ω–∏—è –¥–≤—É—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–Ω–∞–∫–æ–≤ —á–∏—Å–ª–∞—Ö, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ –∑–Ω–∞–∫–æ–≤ –≤ —á–∏—Å–ª–µ –Ω–µ\n"
                    + "–º–µ–Ω–µ–µ –¥–≤—É—Ö.");
            int x = input1();
            System.out.println(sumLastNums(x));
            break;
          case 2:
            System.out.println("–ó–∞–¥–∞—á–∞ 4 –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ç–æ–¥–æ–≤");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–ª —á–∏—Å–ª–æ x –∏\n"
                    + "–≤–æ–∑–≤—Ä–∞—â–∞–ª true, –µ—Å–ª–∏ –æ–Ω–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ.");
            int x1 = input2();
            System.out.println(isPositive(x1));
            break;
          case 3:
            System.out.println("–ó–∞–¥–∞—á–∞ 6 –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ç–æ–¥–æ–≤:");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–ª —Å–∏–º–≤–æ–ª x –∏\n"
                    + "–≤–æ–∑–≤—Ä–∞—â–∞–ª true, –µ—Å–ª–∏ —ç—Ç–æ –±–æ–ª—å—à–∞—è –±—É–∫–≤–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 'A' –¥–æ 'Z'.");
            char x2 = input3();
            System.out.println(isUpperCase(x2));
            break;
          case 4:
            System.out.println("–ó–∞–¥–∞—á–∞ 8 –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ç–æ–¥–æ–≤:");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª true, –µ—Å–ª–∏\n"
                    + "–ª—é–±–æ–µ –∏–∑ –ø—Ä–∏–Ω—è—Ç—ã—Ö —á–∏—Å–µ–ª –¥–µ–ª–∏—Ç –¥—Ä—É–≥–æ–µ –Ω–∞—Ü–µ–ª–æ.");
            int x3 = input4();
            int x4 = input4();
            System.out.println(isDevision(x3, x4));
            break;
          case 5:
            System.out.println("–ó–∞–¥–∞—á–∞ 10 –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ç–æ–¥–æ–≤:");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω —Å—á–∏—Ç–∞–ª —Å—É–º–º—É —Ü–∏—Ñ—Ä\n"
                    + "–¥–≤—É—Ö —á–∏—Å–µ–ª –∏–∑ —Ä–∞–∑—Ä—è–¥–∞ –µ–¥–∏–Ω–∏—Ü. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å –µ–≥–æ –ø–æ–º–æ—â—å—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ\n"
                    + "—Å–ª–æ–∂–µ–Ω–∏–µ –ø—è—Ç–∏ —á–∏—Å–µ–ª –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–≤–µ–¥–∏—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω.");

              System.out.println("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —á–∏—Å–ª–∞:");
              System.out.print("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ (a): ");
              int a = scanner.nextInt();
              System.out.print("–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ (b): ");
              int b = scanner.nextInt();

              // –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤
              int result = lastNumSum(a, b);

Arisha‚ù§Ô∏èüïä, [15.09.2025 9:11]
// –°–ª–µ–¥—É—é—â–∏–µ 4 –≤—ã–∑–æ–≤–∞ (–≤—Å–µ–≥–æ 5)
              for (int i = 2; i <= 4; i++) {
                  System.out.println("–í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ (b): ");
                  int nextB = scanner.nextInt();
                  result = lastNumSum(result, nextB);
              }
            break;
          case 6:
            System.out.println("–ó–∞–¥–∞—á–∞ 2 –∏–∑ '—É—Å–ª–æ–≤–∏–π': ");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª –¥–µ–ª–µ–Ω–∏–µ x\n"
                    + "–Ω–∞ y, –∏ –ø—Ä–∏ —ç—Ç–æ–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–ª, —á—Ç–æ –Ω–µ –±—É–¥–µ—Ç –≤—ã–∫–∏–Ω—É—Ç–∞ –æ—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 0. –ü—Ä–∏\n"
                    + "–¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ 0 —Å–ª–µ–¥—É–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –∏–∑ –º–µ—Ç–æ–¥–∞ —á–∏—Å–ª–æ 0.");
            int x7 = input4();
            int x8 = input4();
            System.out.println(safeDiv(x7, x8));
            break;
          case 7:
            System.out.println("–ó–∞–¥–∞—á–∞ 4 –∏–∑ '—É—Å–ª–æ–≤–∏–π':");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª —Å—Ç—Ä–æ–∫—É,\n"
                    + "–∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç –¥–≤–∞ –ø—Ä–∏–Ω—è—Ç—ã—Ö –º–µ—Ç–æ–¥–æ–º —á–∏—Å–ª–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π\n"
                    + "–∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–±–æ–ª—å—à–µ, –º–µ–Ω—å—à–µ, –∏–ª–∏ —Ä–∞–≤–Ω–æ).");
            int x9 = input4();
            int x10 = input4();
            System.out.println(makeDecision(x9, x10));
            break;
          case 8:
            System.out.println("–ó–∞–¥–∞—á–∞ 6 –∏–∑ '—É—Å–ª–æ–≤–∏–π':");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª true, –µ—Å–ª–∏\n"
                    + "–¥–≤–∞ –ª—é–±—ã—Ö —á–∏—Å–ª–∞ (–∏–∑ —Ç—Ä–µ—Ö –ø—Ä–∏–Ω—è—Ç—ã—Ö) –º–æ–∂–Ω–æ —Å–ª–æ–∂–∏—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å\n"
                    + "—Ç—Ä–µ—Ç—å–µ.");
            int x11 = input4();
            int x12 = input4();
            int x13 = input4();
            System.out.println(sum3(x11, x12, x13));
            break;
          case 9:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 8 –∏–∑ '—É—Å–ª–æ–≤–∏–π':");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª —Å—Ç—Ä–æ–∫—É, –≤\n"
                    + "–∫–æ—Ç–æ—Ä–æ–π —Å–Ω–∞—á–∞–ª–∞ –±—É–¥–µ—Ç —á–∏—Å–ª–æ —Ö, –∞ –∑–∞—Ç–µ–º –æ–¥–Ω–æ –∏–∑ —Å–ª–æ–≤: –≥–æ–¥/–≥–æ–¥–∞/–ª–µ—Ç");
            int x14 = input4();
            System.out.println(age(x14));
            break;
          case 10:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 10 –∏–∑ '—É—Å–ª–æ–≤–∏–π':");
            System.out.println(
                "–í –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –∑–∞–ø–∏—Å–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ\n"
                    + "–¥–Ω—è –Ω–µ–¥–µ–ª–∏. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–æ–¥–∏–ª\n"
                    + "–Ω–∞ —ç–∫—Ä–∞–Ω –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –≤ –Ω–µ–≥–æ –¥–Ω—è –∏ –≤—Å–µ—Ö –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏\n"
                    + "–¥–Ω–µ–π.");
            String x15 = input5();
            printDays(x15);
            break;
          case 11:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 2 –∏–∑ '—Ü–∏–∫–ª–æ–≤':");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª —Å—Ç—Ä–æ–∫—É, –≤\n"
                    + "–∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç x –¥–æ 0 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).");
            int x16 = input6();
            System.out.println(reverseLisNumbs(x16));
            break;
          case 12:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 4 –∏–∑ '—Ü–∏–∫–ª–æ–≤':");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
                    + "–≤–æ–∑–≤–µ–¥–µ–Ω–∏—è x –≤ —Å—Ç–µ–ø–µ–Ω—å y.");
            int x17 = input4();
            int x18 = input4();
            System.out.println(pow(x17, x18));
            break;
          case 13:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 6 –∏–∑ '—Ü–∏–∫–ª–æ–≤':");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª true, –µ—Å–ª–∏\n"
                    + "–≤—Å–µ –∑–Ω–∞–∫–∏ —á–∏—Å–ª–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã, –∏ false –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ.");
            int x19 = input4();
            System.out.println(equalNum(x19));
            break;
          case 14:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 8 –∏–∑ '—Ü–∏–∫–ª–æ–≤':");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–æ–¥–∏–ª –Ω–∞ —ç–∫—Ä–∞–Ω\n"

Arisha‚ù§Ô∏èüïä, [15.09.2025 9:11]
+ "—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ '*' —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ –≤—ã—Å–æ—Ç—É.");
            int x20 = input4();
            leftTriangle(x20);
            break;
          case 15:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 10 –∏–∑ '—Ü–∏–∫–ª–æ–≤':");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª\n"
                    + "—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 9, –¥–∞–ª–µ–µ —Å—á–∏—Ç—ã–≤–∞–ª —Å –∫–æ–Ω—Å–æ–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º\n"
                    + "—á–∏—Å–ª–æ –∏ –≤—ã–≤–æ–¥–∏–ª, —É–≥–∞–¥–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ, —á—Ç–æ –±—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ, –∏–ª–∏ –Ω–µ—Ç.");
            guessGame();
            break;
          case 16:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 2 –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª –∏–Ω–¥–µ–∫—Å\n"
                    + "–ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —á–∏—Å–ª–∞ x –≤ –º–∞—Å—Å–∏–≤ arr. –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –º–∞—Å—Å–∏–≤ ‚Äì\n"
                    + "–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è -1");
            int[] arr1 = inputArray();
            int num1 = input4();
            System.out.println("–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–∑–∏—Ü–∏—è: " + findLast(arr1, num1));
            break;
          case 17:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 4 –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª –Ω–æ–≤—ã–π\n"
                    + "–º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ arr, –æ–¥–Ω–∞–∫–æ –≤ –ø–æ–∑–∏—Ü–∏—é\n"
                    + "pos –±—É–¥–µ—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ x.");
            int[] arr2 = inputArray();
            int num2 = input4();
            int pos = input4();
            add(arr2, num2, pos);
            break;
          case 18:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 6 –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –∏–∑–º–µ–Ω—è–ª –º–∞—Å—Å–∏–≤ arr.\n"
                    + "–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–∞—Å—Å–∏–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω –∑–∞–¥–æ–º-–Ω–∞–ø–µ—Ä–µ–¥.");
            int[] arr3 = inputArray();
            reverse(arr3);
            break;
          case 19:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 8 –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª –Ω–æ–≤—ã–π\n"
                    + "–º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–Ω–∞—á–∞–ª–∞ –∏–¥—É—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ (arr1), –∞ –∑–∞—Ç–µ–º\n"
                    + "–≤—Ç–æ—Ä–æ–≥–æ (arr2).");
            int[] arr4 = inputArray();
            int[] arr5 = inputArray();
            concat(arr4, arr5);
            break;
          case 20:
            System.out.println("–ó–∞–¥–∞–Ω–∏–µ 10 –∏–∑ '–º–∞—Å—Å–∏–≤–æ–≤'");
            System.out.println(
                "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–ª –Ω–æ–≤—ã–π\n"
                    + "–º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–ø–∏—Å–∞–Ω—ã –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ arr –∫—Ä–æ–º–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö.");
            int[] arr6 = inputArray();
            deleteNegative(arr6);
            break;
          default:
            System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!");
            break;
        }
      } else {
        scanner.next();
        System.out.println("–ù–µ–≤–µ—Ä–Ω–æ! –¢–∞–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!");
      }
    }
  }

  public int[] inputArray() {
    System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞: ");
    int n = 0;

    while (true) {
      if (scanner.hasNextInt()) {
        n = scanner.nextInt();
        if (n > 0) {
          break;
        } else {
          System.out.println("–û—à–∏–±–∫–∞! –î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.");
        }
      } else {
        String invalidInput = scanner.next();
        System.out.println("–û—à–∏–±–∫–∞! '" + invalidInput + "' - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.");
      }
      System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞: ");
    }

    int[] x = new int[n];
    for (int i = 0; i < x.length; i++) {
      while (true) {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ " + (i + 1) + " —á–∏—Å–ª–æ: ");

Arisha‚ù§Ô∏èüïä, [15.09.2025 9:11]
if (scanner.hasNextInt()) {
          x[i] = scanner.nextInt();
          break;
        } else {
          String invalidInput = scanner.next();
          System.out.println("–û—à–∏–±–∫–∞! '" + invalidInput + "' - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.");
        }
      }
    }
    return x;
  }

  public int input1() {
    while (true) {
      System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–Ω–µ –º–µ–Ω–µ–µ 2-—É—Ö —Å–∏–º–≤–æ–ª–æ–≤): ");
      if (scanner.hasNextInt()) {
        int x = scanner.nextInt();
        if (Math.abs(x) < 10) {
          System.out.println("–û—à–∏–±–∫–∞! –ß–∏—Å–ª–æ –Ω–µ –∏–º–µ–µ—Ç 2 —Å–∏–º–≤–æ–ª–æ–≤! ");
          continue;
        }
        System.out.print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ");
        return x;
      } else {
        String inputlag = scanner.next();
        System.out.println("–û—à–∏–±–∫–∞! " + inputlag + " - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ!");
      }
    }
  }

  public int input2() {
    while (true) {
      System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
      if (scanner.hasNextInt()) {
        int x = scanner.nextInt();
        System.out.print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ");
        return x;
      } else {
        String inputlag = scanner.next();
        System.out.println("–û—à–∏–±–∫–∞! " + inputlag + " - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ!");
      }
    }
  }

  public char input3() {
    while (true) {
      System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª (–æ—Ç A –¥–æ Z): ");
      String x = scanner.next();

      if (x.length() != 1) {
        System.out.println("–û—à–∏–±–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –±—É–∫–≤—É");
        continue;
      }
      char x1 = x.charAt(0);
      return x1;
    }
  }

  public int input4() {
    while (true) {
      System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
      if (scanner.hasNextInt()) {
        int x = scanner.nextInt();
        return x;
      } else {
        String inputlag = scanner.next();
        System.out.println("–û—à–∏–±–∫–∞! " + inputlag + " - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ!");
      }
    }
  }

  public String input5() {
    scanner.nextLine();
    while (true) {
      System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ");
      String input = scanner.nextLine();

      if (scanner.hasNextInt()) {
        String invalidlnput = scanner.next();
        System.out.println("–û—à–∏–±–∫–∞!" + invalidlnput + " - —ç—Ç–æ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏!");
      } else {
        return input;
      }
    }
  }

  public int input6() {
    while (true) {
      System.out.print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ");
      if (scanner.hasNextInt()) {
        int x = scanner.nextInt();
        scanner.nextLine();
        return x;
      } else {
        String invalidInput = scanner.next();
        System.out.println("–û—à–∏–±–∫–∞! '" + invalidInput + "' - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.");
      }
    }
  }

  //2
  public int sumLastNums(int x) {
    int first = x % 10;
    int second = (x / 10) % 10;
    return first + second;
  }

Arisha‚ù§Ô∏èüïä, [15.09.2025 9:11]
//4
  public boolean isPositive(int x) {
    if (x > 0) {
      return true;
    } else {
      return false;
    }
  }
//6
  public boolean isUpperCase(char x) {
    System.out.print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ");
    return x >= 'A' && x <= 'Z';
  }
//8
  public boolean isDevision(int a, int b) {
    if (a % b == 0 || b % a == 0) {
      return true;
    } else {
      return false;
    }
  }
//10
  public int lastNumSum(int a, int b) {
    a = a % 10 + b % 10;
    System.out.print("–†–µ–∑—É–ª—å—Ç–∞—Ç : " + a + '\n');
    return a;
  }
//2
  public double safeDiv(int x, int y) {
    if (x != 0 && y != 0) {
      return x / y;
    } else {
      return 0;
    }
  }
//4
  public String makeDecision(int x, int y) {
    if (x > y) {
      return x + " > " + y;
    } else if (x == y) {
      return x + " = " + y;
    } else {
      return x + " < " + y;
    }
  }
//6
public boolean sum3(int x, int y, int z) {
    if (x + y == z) {
        return true;
    }
    if (x + z == y) {
        return true;
    }
    if (y + z == x) {
        return true;
    }
    return false;
}
//8
  public String age(int x) {
    if (x % 10 == 1) {
      if (x%100 == 11) {
        return x + " –ª–µ—Ç";
      }
      return x + " –≥–æ–¥";
    } else if (x % 10 == 2  x % 10 == 3  x % 10 == 4) {
      if (x%100 == 12  x%100== 13  x%100 == 14) return x + " –ª–µ—Ç";
      return x + " –≥–æ–¥–∞";
    } else {
      return x + " –ª–µ—Ç";
    }
  }
//10
  public void printDays(String x) {
    switch (x) {
      case "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
        System.out.println("–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫");
      case "–≤—Ç–æ—Ä–Ω–∏–∫":
        System.out.println("–≤—Ç–æ—Ä–Ω–∏–∫");
      case "—Å—Ä–µ–¥–∞":
        System.out.println("—Å—Ä–µ–¥–∞");
      case "—á–µ—Ç–≤–µ—Ä–≥":
        System.out.println("—á–µ—Ç–≤–µ—Ä–≥");
      case "–ø—è—Ç–Ω–∏—Ü–∞":
        System.out.println("–ø—è—Ç–Ω–∏—Ü–∞");
      case "—Å—É–±–±–æ—Ç–∞":
        System.out.println("—Å—É–±–±–æ—Ç–∞");
      case "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":
        System.out.println("–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ");
        break;
      default:
        System.out.println("—ç—Ç–æ –Ω–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏");
    }
  }
//2
public String reverseLisNumbs(int x) {
    if (x == 0) {
        return "0";
    }

    String result = "";

    if (x > 0) {
        for (int i = x; i >= 0; i--) {
            result += i;
            if (i > 0) {
                result += " ";
            }
        }
    } else {
        for (int i = x; i <= 0; i++) {
            result += i;
            if (i < 0) {
                result += " ";
            }
        }
    }

Arisha‚ù§Ô∏èüïä, [15.09.2025 9:11]
return result;
}
//4
  public double pow(int x, int y) {
    if (y == 0) {
      System.out.println("–†–µ–∑—É–ª—å—Ç–∞—Ç:");
      return 1;
    }
    if (y < 0) {
      double res = 1.0;
      for (int i = 0; i < -y; i++) {
        res *= x;
      }
      System.out.println("–†–µ–∑—É–ª—å—Ç–∞—Ç:");
      return 1.0 / res;
    } else {
      int res = 1;
      for (int i = 0; i < y; i++) {
        res *= x;
      }
      System.out.println("–†–µ–∑—É–ª—å—Ç–∞—Ç:");
      return res;
    }
  }
//6
  public boolean equalNum(int x) {
      int currentx;
    if (x < 10 && x >= 0) {
      return true;
    }
    if (x < 0) {
      x = -x;
    }
    int lastx = x % 10;
    x = x / 10;
    while (x > 0) {
      currentx = x % 10;
      if (currentx != lastx) {
        return false;
      }
      x = x / 10;
    }
    return true;
  }
//8
  public void leftTriangle(int x) {
    char z = '*';
    for (int i = 1; i <= x; i++) {
      for (int j = 1; j <= i; j++) {
        System.out.print(z);
      }
      System.out.println();
    }
  }
//10
  public void guessGame() {
    Random random = new Random();
    int i = 0;
    int rand = random.nextInt(10);
    while (true) {
      System.out.print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 9: ");
      i++;
      if (scanner.hasNextInt()) {
        int name = scanner.nextInt();
        if (name < 0 || name > 10) {
          System.out.println("–ß–∏—Å–ª–æ –æ—Ç 0 –¥–æ 9!");
          continue;
        }
        if (rand == name) {
          System.out.println("–í—ã —É–≥–∞–¥–∞–ª–∏! \n–í—ã –æ—Ç–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ –∑–∞ " + i + " –ø–æ–ø—ã—Ç–æ–∫!");
          break;
        } else {
          System.out.println("–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏! ");
          continue;
        }
      } else {
        String input = scanner.next();
        System.out.println(input + " - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ!");
      }
    }
  }
//2
  public int findLast(int[] arr, int x) {
    int j = -1;
    for (int i = 0; i < arr.length; i++) {
      if (arr[i] == x) {
        j = i;
      }
    }
    return j;
  }
//4
  public int[] add(int[] arr, int x, int pos) {
    if (pos < 0 || pos > arr.length) {
      System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è: " + pos);
      return arr;
    }
//6
    int[] newArr = new int[arr.length + 1];
    for (int i = 0; i < pos; i++) {
      newArr[i] = arr[i];
    }

    newArr[pos] = x;

    for (int i = pos; i < arr.length; i++) {
      newArr[i + 1] = arr[i];
    }

    System.out.print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ");
    for (int i = 0; i < newArr.length; i++) {
      System.out.print(newArr[i] + " ");
    }
    System.out.println();
    return newArr;
  }
//8
  public void reverse(int[] arr) {
    System.out.print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ");
    for (int i = arr.length - 1; i >= 0; i--) {
      System.out.print(arr[i] + " ");
    }
    System.out.println();
  }

  public int[] concat(int[] arr1, int[] arr2) {
    int[] result = new int[arr1.length + arr2.length];
    for (int i = 0; i < arr1.length; i++) {
      result[i] = arr1[i];
    }

    for (int i = 0; i < arr2.length; i++) {
      result[arr1.length + i] = arr2[i];
    }

    System.out.print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ");
    for (int i = 0; i < result.length; i++) {
      System.out.print(result[i] + " ");
    }
    System.out.println();
    return result;
  }
//10
  public int[] deleteNegative(int[] arr) {
    int count = 0;
    for (int num : arr) {
      if (num >= 0) {
        count++;
      }
    }

    int[] result = new int[count];
    int index = 0;
    for (int num : arr) {
      if (num >= 0) {
        result[index] = num;
        index++;
      }
    }

    System.out.print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ");
    for (int i = 0; i < result.length; i++) {
      System.out.print(result[i] + " ");
    }
    System.out.println();
    return result;
  }
}
