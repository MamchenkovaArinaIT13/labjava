ОТЧЕТ ПО ЛАБОРАТОРНОЙ РАБОТЕ №2 ПО JAVA

---ОБЩЕЕ ОПИСАНИЕ МОЕЙ РАБОТЫ---
Программа представляет собой консольное приложение с меню, содержащее 6 задач по объектно-ориентированному программированию, разделенных на работу с классами: Name, House, Employee, Departament и Fraction. Приложение поддерживает два режима ввода данных: автоматический (с готовыми данными) и ручной ввод пользователем.

---СТРУКТУРА ЛАБОРАТОРНОЙ РАБОТЫ---
1) MenuSystem - основной класс с логикой меню и валидации ввода
2) Name - класс для работы с именами
3) House - класс для представления дома
4) Employee - класс для представления сотрудника
5) Departament - класс для представления отдела
6) Fraction - класс для работы с дробями
7) Main - точка входа в программу

Все задачи пронумерованы согласно меню!

---ТЕСТИРОВАНИЕ ЗАДАЧ---

1) КАТЕГОРИЯ: Класс Name

-ЗАДАЧА 3: Создание объектов Name

МЕТОДЫ: конструкторы Name(), Name(String), Name(String, String), Name(String, String, String), toString()
ОПИСАНИЕ: Создание сущности "Имя" с поддержкой различных комбинаций параметров

ТЕСТИРОВАНИЕ (автоматический ввод):
- Клеопатра: "Клеопатра"
- Пушкин Александр Сергеевич: "Пушкин Александр Сергеевич" 
- Маяковский Владимир: "Маяковский Владимир"

ТЕСТИРОВАНИЕ (ручной ввод):
Входные параметры: только имя "Мария"
Результат: "Мария"

Входные параметры: фамилия "Иванов", имя "Иван", отчество "Иванович"
Результат: "Иванов Иван Иванович"

-ЗАДАЧА 5: Альтернативный формат Name

МЕТОДЫ: toStringNow()
ОПИСАНИЕ: Альтернативный формат вывода имен с измененным порядком параметров

ТЕСТИРОВАНИЕ (автоматический ввод):
- Клеопатра: "Клеопатра"
- Пушкин Александр Сергеевич: "Александр Сергеевич Пушкин"
- Маяковский Владимир: "Владимир Маяковский"
- Христофор Бонифатьевич: "Христофор Бонифатьевич"

ТЕСТИРОВАНИЕ (ручной ввод):
Входные параметры: имя "Сергей", фамилия "Петров"
Результат: "Сергей Петров"

2) КАТЕГОРИЯ: Класс House

-ЗАДАЧА 5: Создание домов

МЕТОДЫ: конструкторы House(), House(int), toString()
ОПИСАНИЕ: Создание сущности "Дом" с правильным склонением слова "этаж"

ТЕСТИРОВАНИЕ (автоматический ввод):
- 1 этаж: "Дом с 1 этажом"
- 5 этажей: "Дом с 5 этажами" 
- 23 этажа: "Дом с 23 этажами"
- 0 этажей: "Дом должен содержать >0 этажей"

ТЕСТИРОВАНИЕ (ручной ввод):
Входные параметры: 3 этажа
Результат: "Дом с 3 этажами"

Входные параметры: 21 этаж
Результат: "Дом с 21 этажом"

3) КАТЕГОРИЯ: Классы Employee и Departament

-ЗАДАЧА 4: Создание сотрудников и отделов

МЕТОДЫ: Employee(String, Departament), Departament(String), setManager(), toString()
ОПИСАНИЕ: Создание системы сотрудников и отделов с назначением руководителей

ТЕСТИРОВАНИЕ (автоматический ввод):
Созданы сотрудники: Козлов, Петров, Сидоров в отделе IT
Назначен начальник: Козлов
Результат:
- Козлов: "Козлов работает в отделе IT, начальник которого Козлов"
- Петров: "Петров работает в отделе IT, начальник которого Козлов" 
- Сидоров: "Сидоров работает в отделе IT, начальник которого Козлов"

ТЕСТИРОВАНИЕ (ручной ввод):
Создан отдел: "Финансы"
Созданы сотрудники: "Смирнов", "Петрова", "Васильев"
Назначен начальник: "Смирнов"
Результат корректно отображает информацию о сотрудниках и их начальнике

-ЗАДАЧА 4: Получение всех сотрудников отдела

МЕТОДЫ: getAllDepartmentEmployees(), getEmployees(), addEmployee()
ОПИСАНИЕ: Получение списка всех сотрудников отдела через ссылку на любого сотрудника

ТЕСТИРОВАНИЕ (автоматический ввод):
Через Козлова: список сотрудников IT отдела (Козлов, Петров, Сидоров)
Через Петрова: тот же список сотрудников

ТЕСТИРОВАНИЕ (ручной ввод):
Отдел "Разработка", сотрудники: "Алексей", "Мария", "Дмитрий"
Получение списка через любого сотрудника возвращает полный список всех трех сотрудников

4) КАТЕГОРИЯ: Класс Fraction

-ЗАДАЧА 5: Работа с дробями

МЕТОДЫ: конструкторы Fraction(int, int), Fraction(int), add(), subtract(), multiply(), divide(), toString()
ОПИСАНИЕ: Выполнение арифметических операций с дробями с автоматическим сокращением

ТЕСТИРОВАНИЕ (автоматический ввод):
Дроби: 1/3, 2/3, 3/4, 5/6
Операции:
- 1/3 + 2/3 = 1
- 3/4 - 5/6 = -1/12
- 1/3 * 2/3 = 2/9
- 3/4 ÷ 5/6 = 9/10

ТЕСТИРОВАНИЕ (ручной ввод):
Входные параметры: дробь 2/3 и дробь 1/4
Результаты:
- 2/3 + 1/4 = 11/12
- 2/3 - 1/4 = 5/12  
- 2/3 × 1/4 = 1/6
- 2/3 ÷ 1/4 = 8/3

---ВСПОМОГАТЕЛЬНЫЕ МЕТОДЫ, КОТОРЫМИ Я ПОЛЬЗОВАЛСЯ---
- showMainMenu() - главное меню программы
- autoInputMenu() - меню автоматического ввода
- manualInputMenu() - меню ручного ввода
- getValidNameInput() - валидация ввода имен
- getValidTextInput() - валидация ввода текста
- getIntInput() - валидация целых чисел
- getPositiveIntInput() - валидация положительных чисел
- getNonZeroIntInput() - валидация ненулевых чисел

---ВАЖНО!---
ВСЕ ПРОВЕРКИ НА НЕКОРРЕКТНЫЙ ВВОД БЫЛИ СОБЛЮДЕНЫ В КАЖДОМ МЕТОДЕ ДЛЯ ВВОДА ДАННЫХ:
- Проверка пустого ввода
- Проверка наличия цифр в именах
- Проверка допустимых символов
- Проверка диапазонов чисел
- Проверка деления на ноль для дробей

---ОСОБЕННОСТИ РЕАЛИЗАЦИИ---
1. Все классы инкапсулируют данные с использованием private полей и public get/set методов
2. Реализована двусторонняя связь между Employee и Departament
3. Класс Departament автоматически добавляет сотрудников в список при создании
4. Класс Fraction автоматически сокращает дроби и обеспечивает положительный знаменатель
5. Класс House корректно склоняет слово "этаж" в зависимости от числа
6. Реализована обработка некорректного ввода во всех методах валидации

---ЗАКЛЮЧЕНИЕ---
Все 6 задач успешно реализованы и протестированы. Программа демонстрирует принципы ООП: инкапсуляцию, перегрузку методов и конструкторов. Реализована удобная система меню с защитой от некорректного ввода. Каждый класс решает конкретную задачу из лабораторной работы №2 и корректно обрабатывает различные сценарии использования.
