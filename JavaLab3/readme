ОТЧЕТ ПО ЛАБОРАТОРНОЙ РАБОТЕ №3 ПО JAVA
Вариант 8

ОБЩЕЕ ОПИСАНИЕ РАБОТЫ
Лабораторная работа №3 посвящена углубленному изучению объектно-ориентированного программирования в Java, включая инкапсуляцию, разработку структур данных, наследование, создание иерархий, 
полиморфизм, сравнение объектов, работу с пакетами и клонирование. Все задачи реализованы в едином проекте с дружественным консольным интерфейсом.

ЗАДАНИЕ 1. ИНКАПСУЛЯЦИЯ
1.4. ДРОБИ (НЕИЗМЕНЯЕМЫЕ)
ОПИСАНИЕ КЛАССА Fraction:
Неизменяемый класс для представления дробей с автоматическим упрощением и обработкой отрицательных значений.

ПОЛЯ КЛАССА:
private final int numerator - числитель дроби
private final int denominator - знаменатель дроби

КОНСТРУКТОРЫ:
Fraction(int numerator, int denominator)
Описание: Создает дробь с указанными числителем и знаменателем
Параметры: numerator - числитель, denominator - знаменатель
Исключения: IllegalArgumentException при нулевом знаменателе

МЕТОДЫ ДОСТУПА:
int getNumerator() - возвращает числитель
int getDenominator() - возвращает знаменатель
double doubleValue() - возвращает десятичное значение дроби

МЕТОДЫ ВАЛИДАЦИИ:
private int gcd(int a, int b) - вычисляет наибольший общий делитель

ТЕСТИРОВАНИЕ:
Fraction frac1 = new Fraction(3, 4);
Fraction frac2 = new Fraction(-2, 5);
Fraction frac3 = new Fraction(1, -3);
// Дроби автоматически упрощаются и нормализуются

1.7. НЕПУСТЫЕ ИМЕНА
ОПИСАНИЕ КЛАССА Name:
Неизменяемый класс для работы с именами с гарантией наличия хотя бы одного непустого поля.

ПОЛЯ КЛАССА:
private final String lastname - фамилия
private final String firstname - имя
private final String surname - отчество

КОНСТРУКТОРЫ:
Name(String firstname) - создает имя только с именем
Name(String lastname, String firstname) - создает имя с фамилией и именем
Name(String lastname, String firstname, String surname) - создает полное имя

МЕТОДЫ ВАЛИДАЦИИ:
private void validateAtLeastOneField(String firstname, String lastname, String surname)
Описание: Гарантирует наличие хотя бы одного непустого поля
Исключения: IllegalArgumentException если все поля пустые

МЕТОД ПРЕДСТАВЛЕНИЯ:
String toString() - формат "Фамилия Имя Отчество"

ТЕСТИРОВАНИЕ:

Name name1 = new Name("Иванов", "Иван", "Иванович");
Name name2 = new Name("Петров", "Петр");
Name name3 = new Name("Сидоров");
// Вывод: Иванов Иван Иванович, Петров Петр, Сидоров

ЗАДАНИЕ 2. РАЗРАБОТКА СТРУКТУР ДАННЫХ
2.2. СЕКРЕТЫ
ОПИСАНИЕ КЛАССА Secret:
Класс для хранения и передачи секретов с модификацией текста при передаче.

ПОЛЯ КЛАССА:
private final String text - текст секрета
private final String keeperName - имя хранителя
private final int orderNumber - порядковый номер хранителя
private Secret nextKeeper - следующий хранитель в цепочке
private static int totalKeepers - общее количество хранителей

КОНСТРУКТОРЫ:
Secret(String keeperName, String text) - создает новый секрет
Secret(Secret other, String newKeeperName) - передает секрет другому человеку

МЕТОДЫ ДОСТУПА:
int getOrderNumber() - возвращает порядковый номер
int getPeopleAfter() - возвращает количество людей после текущего
String getNthPerson(int n) - возвращает имя N-го человека в цепочке
int getTextLengthDifference(int n) - возвращает разницу в длине текста

МЕТОДЫ МОДИФИКАЦИИ:
private String modifyText(String originalText) - добавляет случайные символы в текст

ТЕСТИРОВАНИЕ:

Secret secret1 = new Secret("Анна", "Секрет");
Secret secret2 = new Secret(secret1, "Борис");
// Вывод: Анна сказал что Секрет
// Текст модифицируется случайными символами

ЗАДАНИЕ 3. НАСЛЕДОВАНИЕ
3.1. ЗАПРЕТНАЯ ДРОБЬ
ОПИСАНИЕ КЛАССА Fraction:
Final класс дроби, запрещающий создание подклассов для обеспечения неизменяемости.

ОСОБЕННОСТИ РЕАЛИЗАЦИИ:
Класс объявлен как final
Все поля объявлены как final
Отсутствуют сеттеры
Гарантированная неизменяемость состояния

ПРЕИМУЩЕСТВА:
Потокобезопасность
Предсказуемое поведение
Возможность кэширования хэш-кода

ЗАДАНИЕ 4. СОЗДАНИЕ ИЕРАРХИЙ
4.2. ДРОБЬ ЭТО ЧИСЛО
ОПИСАНИЕ КЛАССА NumberFraction:
Класс дроби как подтипа стандартного класса Number.

НАСЛЕДОВАНИЕ:
Наследует от java.lang.Number

РЕАЛИЗОВАННЫЕ МЕТОДЫ:
int intValue() - целочисленное значение
long longValue() - длинное целочисленное значение
float floatValue() - значение с плавающей точкой
double doubleValue() - значение с двойной точностью

ПРЕИМУЩЕСТВА:
Совместимость со стандартными числовыми операциями
Возможность использования в коллекциях чисел
Стандартизированное поведение

ТЕСТИРОВАНИЕ:

NumberFraction frac = new NumberFraction(1, 2);
double value = frac.doubleValue(); // 0.5
int intVal = frac.intValue(); // 0

ЗАДАНИЕ 5. ПОЛИМОРФИЗМ
5.1. СЛОЖЕНИЕ
ОПИСАНИЕ МЕТОДА:
Метод для сложения различных числовых значений через полиморфизм.

СИГНАТУРА МЕТОДА:
double sumNumbers(Number... numbers)

ПАРАМЕТРЫ:
numbers - переменное количество числовых значений

ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ:
Сумма всех переданных чисел в вещественной форме

ПОДДЕРЖИВАЕМЫЕ ТИПЫ:
Целые числа (Integer, Long)
Числа с плавающей точкой (Float, Double)
Дроби (NumberFraction)
Любые другие наследники Number

ТЕСТИРОВАНИЕ:

// 2 + 3
sumNumbers(2, 3); // 5.0

// 5 + 2.3  
sumNumbers(5, 2.3); // 7.3

// Дроби
sumNumbers(new NumberFraction(1, 2), new NumberFraction(1, 3)); // 0.833...

ЗАДАНИЕ 6. ПОЛИМОРФНОЕ СРАВНЕНИЕ
6.1. СРАВНЕНИЕ ДРОБЕЙ
РЕАЛИЗАЦИЯ В КЛАССЕ Fraction:
Переопределение методов equals и hashCode для сравнения по состоянию.

МЕТОД equals:
boolean equals(Object obj)
Логика: Две дроби равны если равны их числители и знаменатели
Учет: Автоматического упрощения дробей

МЕТОД hashCode:
int hashCode()
Логика: Вычисляется на основе числителя и знаменателя
Гарантия: Равные дроби имеют равные хэш-коды

ТЕСТИРОВАНИЕ:

Fraction frac1 = new Fraction(1, 2);
Fraction frac2 = new Fraction(2, 4);
Fraction frac3 = new Fraction(1, 3);

frac1.equals(frac2); // true (1/2 == 2/4)
frac1.equals(frac3); // false
frac1.hashCode() == frac2.hashCode(); // true

ЗАДАНИЕ 7. ПАКЕТЫ
7.1. НАВЕСТИ ПОРЯДОК
РЕАЛИЗОВАННАЯ СТРУКТУРА ПАКЕТОВ:

ru.mamchenkova.fraction:
Fraction - работа с дробями

ru.mamchenkova.person:
Name - работа с именами

ru.mamchenkova.secrets:
Secret - работа с секретами

ru.mamchenkova.number:
NumberFraction - дробь как число

ru.mamchenkova.application:
MenuSystem - система меню
MathOperations - математические операции

ru.mamchenkova.main:
Main - точка входа

7.2. ГЛАВНЫЙ МЕТОД
ОПИСАНИЕ КЛАССА Main:
Точка входа в программу, расположенная в пакете ru.mamchenkova.main

МЕТОДЫ:
public static void main(String[] args) - главный метод программы
public static double power(String xStr, String yStr) - метод возведения в степень

7.3. ВОЗВЕДЕНИЕ В СТЕПЕНЬ
РЕАЛИЗОВАННЫЙ МЕТОД:
double power(String xStr, String yStr)

ОПИСАНИЕ: Возводит число X в степень Y
ПАРАМЕТРЫ:
xStr - строка с числом X
yStr - строка с числом Y
ВОЗВРАЩАЕТ: результат возведения в степень
ИСПОЛЬЗУЕТ:
Integer.parseInt для преобразования строк
Math.pow для возведения в степень

ТЕСТИРОВАНИЕ:

double result = power("2", "3"); // 8.0
double result2 = power("5", "2"); // 25.0

ЗАДАНИЕ 8. ПАКЕТНАЯ ИНКАПСУЛЯЦИЯ
8.3. КЛОНИРОВАНИЕ ДРОБИ
РЕАЛИЗАЦИЯ В КЛАССЕ Fraction:
Реализация интерфейса Cloneable и переопределение метода clone()

МЕТОД clone:
Fraction clone()
ОПИСАНИЕ: Создает и возвращает копию объекта дроби
ВОЗВРАЩАЕТ: новый объект Fraction с теми же значениями полей
ОСОБЕННОСТИ:
Поверхностное копирование (поля примитивных типов)
Создание нового объекта в памяти
Сохранение равенства по equals

ТЕСТИРОВАНИЕ:

Fraction original = new Fraction(3, 5);
Fraction cloned = original.clone();

original.equals(cloned); // true
original == cloned; // false (разные объекты)
original.hashCode() == cloned.hashCode(); // true

СИСТЕМА МЕНЮ И ТЕСТИРОВАНИЯ
КЛАСС MenuSystem
ОПИСАНИЕ: Обеспечивает удобное тестирование всех реализованных классов через консольное меню.

РАСПОЛОЖЕНИЕ: ru.mamchenkova.application.MenuSystem
ВОЗМОЖНОСТИ:
Ручной ввод данных пользователем
Автоматический ввод с готовыми тестовыми данными
Валидация всех вводимых данных
Пошаговое тестирование каждой задачи

РЕЖИМЫ РАБОТЫ:
Автоматический ввод - демонстрация работы на готовых примерах
Ручной ввод - пользователь вводит данные самостоятельно

СТРУКТУРА МЕНЮ:
Главное меню выбора режима работы
Меню автоматического ввода (8 заданий)
Меню ручного ввода (6 категорий)

ЗАКЛЮЧЕНИЕ
Все 8 задач варианта 8 успешно реализованы и протестированы:
Задание 1.4 - Неизменяемые дроби с автоматическим упрощением
Задание 1.7 - Непустые имена с гарантированной валидацией
Задание 2.2 - Секреты с модификацией текста при передаче
Задание 3.1 - Запретная дробь (final класс)
Задание 4.2 - Дробь как подтип Number
Задание 5.1 - Полиморфное сложение числовых значений
Задание 6.1 - Сравнение дробей по состоянию
Задание 7.1-7.3 - Организация пакетов и главный метод
Задание 8.3 - Клонирование дробей
